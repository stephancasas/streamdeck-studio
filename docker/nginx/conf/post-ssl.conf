server {
    listen 80;
    listen [::]:80;
    server_name ${APP_HOSTNAME};
    root ${WEB_ROOT}/public;
    charset utf-8;

    # Allow Access for Certbot
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Permanent Redirect to HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ${APP_HOSTNAME};
    root ${WEB_ROOT}/public;

    index index.php;
    charset utf-8;

    # Use Certs from Certbot Volume
    ssl_certificate /etc/cert/live/${APP_HOSTNAME}/fullchain.pem;
    ssl_certificate_key /etc/cert/live/${APP_HOSTNAME}/privkey.pem;

    # Use Pre-loaded Mozilla Diffie-Hellman Params
    ssl_dhparam /etc/dhparams.pem;

    # Improve HTTPS performance with session resumption
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Protection Against BEAST Attacks
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HTTP_Strict_Transport_Security
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";

    # X-Frame-Options
    add_header X-Frame-Options SAMEORIGIN always;

    # X-Content-Type-Options
    add_header X-Content-Type-Options nosniff always;

    # X-XSS-Protection
    add_header X-Xss-Protection "1; mode=block" always;

    # Enable OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # Use Root CA and Intermediate Certs for Trust Chain
    ssl_trusted_certificate /etc/cert/live/${APP_HOSTNAME}/chain.pem;

    # Use CloudFlare Name Service
    resolver 1.1.1.1 1.0.0.1 [2606:4700:4700::1111] [2606:4700:4700::1001]     valid=300s;
    resolver_timeout 5s;

    # Provide Access to Existing Files in Public Directory
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Do not log requests for SEO data properties
    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    # Forward "not found" errors to Laravel
    error_page 404 /index.php;

    # Use Php Container
    location ~ \.php$ {
        fastcgi_pass app:9000;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params;
    }

    # Reject access to HTTPS well-known
    location ~ /\.(?!well-known).* {
        deny all;
    }
}